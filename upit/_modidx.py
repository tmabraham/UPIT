# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/UPIT',
                'doc_host': 'https://tmabraham.github.io',
                'git_url': 'https://github.com/tmabraham/UPIT/tree/master/',
                'lib_path': 'upit'},
  'syms': { 'upit.data.unpaired': { 'upit.data.unpaired.PILImageA': ('data.unpaired.html#pilimagea', 'upit/data/unpaired.py'),
                                    'upit.data.unpaired.PILImageB': ('data.unpaired.html#pilimageb', 'upit/data/unpaired.py'),
                                    'upit.data.unpaired.RandPair': ('data.unpaired.html#randpair', 'upit/data/unpaired.py'),
                                    'upit.data.unpaired.RandPair.__init__': ( 'data.unpaired.html#randpair.__init__',
                                                                              'upit/data/unpaired.py'),
                                    'upit.data.unpaired.RandPair.encodes': ('data.unpaired.html#randpair.encodes', 'upit/data/unpaired.py'),
                                    'upit.data.unpaired.TensorImageA': ('data.unpaired.html#tensorimagea', 'upit/data/unpaired.py'),
                                    'upit.data.unpaired.TensorImageB': ('data.unpaired.html#tensorimageb', 'upit/data/unpaired.py'),
                                    'upit.data.unpaired.ToTensorA': ('data.unpaired.html#totensora', 'upit/data/unpaired.py'),
                                    'upit.data.unpaired.ToTensorA.encodes': ( 'data.unpaired.html#totensora.encodes',
                                                                              'upit/data/unpaired.py'),
                                    'upit.data.unpaired.ToTensorB': ('data.unpaired.html#totensorb', 'upit/data/unpaired.py'),
                                    'upit.data.unpaired.ToTensorB.encodes': ( 'data.unpaired.html#totensorb.encodes',
                                                                              'upit/data/unpaired.py'),
                                    'upit.data.unpaired.change_type_of_tfm': ( 'data.unpaired.html#change_type_of_tfm',
                                                                               'upit/data/unpaired.py'),
                                    'upit.data.unpaired.convert_func': ('data.unpaired.html#convert_func', 'upit/data/unpaired.py'),
                                    'upit.data.unpaired.create_image': ('data.unpaired.html#create_image', 'upit/data/unpaired.py'),
                                    'upit.data.unpaired.get_dls': ('data.unpaired.html#get_dls', 'upit/data/unpaired.py'),
                                    'upit.data.unpaired.get_dls_from_hf': ('data.unpaired.html#get_dls_from_hf', 'upit/data/unpaired.py')},
            'upit.inference.cyclegan': { 'upit.inference.cyclegan.FolderDataset': ( 'inference.cyclegan.html#folderdataset',
                                                                                    'upit/inference/cyclegan.py'),
                                         'upit.inference.cyclegan.FolderDataset.__getitem__': ( 'inference.cyclegan.html#folderdataset.__getitem__',
                                                                                                'upit/inference/cyclegan.py'),
                                         'upit.inference.cyclegan.FolderDataset.__init__': ( 'inference.cyclegan.html#folderdataset.__init__',
                                                                                             'upit/inference/cyclegan.py'),
                                         'upit.inference.cyclegan.FolderDataset.__len__': ( 'inference.cyclegan.html#folderdataset.__len__',
                                                                                            'upit/inference/cyclegan.py'),
                                         'upit.inference.cyclegan.export_generator': ( 'inference.cyclegan.html#export_generator',
                                                                                       'upit/inference/cyclegan.py'),
                                         'upit.inference.cyclegan.get_preds_cyclegan': ( 'inference.cyclegan.html#get_preds_cyclegan',
                                                                                         'upit/inference/cyclegan.py'),
                                         'upit.inference.cyclegan.load_dataset': ( 'inference.cyclegan.html#load_dataset',
                                                                                   'upit/inference/cyclegan.py')},
            'upit.metrics': { 'upit.metrics.FrechetInceptionDistance': ('metrics.html#frechetinceptiondistance', 'upit/metrics.py'),
                              'upit.metrics.FrechetInceptionDistance.__init__': ( 'metrics.html#frechetinceptiondistance.__init__',
                                                                                  'upit/metrics.py'),
                              'upit.metrics.FrechetInceptionDistance.accumulate': ( 'metrics.html#frechetinceptiondistance.accumulate',
                                                                                    'upit/metrics.py'),
                              'upit.metrics.FrechetInceptionDistance.calc_activations_for_batch': ( 'metrics.html#frechetinceptiondistance.calc_activations_for_batch',
                                                                                                    'upit/metrics.py'),
                              'upit.metrics.FrechetInceptionDistance.calculate_activation_statistics': ( 'metrics.html#frechetinceptiondistance.calculate_activation_statistics',
                                                                                                         'upit/metrics.py'),
                              'upit.metrics.FrechetInceptionDistance.calculate_frechet_distance': ( 'metrics.html#frechetinceptiondistance.calculate_frechet_distance',
                                                                                                    'upit/metrics.py'),
                              'upit.metrics.FrechetInceptionDistance.get_inception_model': ( 'metrics.html#frechetinceptiondistance.get_inception_model',
                                                                                             'upit/metrics.py'),
                              'upit.metrics.FrechetInceptionDistance.reset': ( 'metrics.html#frechetinceptiondistance.reset',
                                                                               'upit/metrics.py'),
                              'upit.metrics.FrechetInceptionDistance.value': ( 'metrics.html#frechetinceptiondistance.value',
                                                                               'upit/metrics.py'),
                              'upit.metrics.InceptionV3': ('metrics.html#inceptionv3', 'upit/metrics.py'),
                              'upit.metrics.InceptionV3.__init__': ('metrics.html#inceptionv3.__init__', 'upit/metrics.py'),
                              'upit.metrics.InceptionV3.forward': ('metrics.html#inceptionv3.forward', 'upit/metrics.py')},
            'upit.models.cyclegan': { 'upit.models.cyclegan.CycleGAN': ('models.cyclegan.html#cyclegan', 'upit/models/cyclegan.py'),
                                      'upit.models.cyclegan.CycleGAN.__init__': ( 'models.cyclegan.html#cyclegan.__init__',
                                                                                  'upit/models/cyclegan.py'),
                                      'upit.models.cyclegan.CycleGAN.forward': ( 'models.cyclegan.html#cyclegan.forward',
                                                                                 'upit/models/cyclegan.py'),
                                      'upit.models.cyclegan.ResnetBlock': ('models.cyclegan.html#resnetblock', 'upit/models/cyclegan.py'),
                                      'upit.models.cyclegan.ResnetBlock.__init__': ( 'models.cyclegan.html#resnetblock.__init__',
                                                                                     'upit/models/cyclegan.py'),
                                      'upit.models.cyclegan.ResnetBlock.forward': ( 'models.cyclegan.html#resnetblock.forward',
                                                                                    'upit/models/cyclegan.py'),
                                      'upit.models.cyclegan.compare_networks': ( 'models.cyclegan.html#compare_networks',
                                                                                 'upit/models/cyclegan.py'),
                                      'upit.models.cyclegan.convT_norm_relu': ( 'models.cyclegan.html#convt_norm_relu',
                                                                                'upit/models/cyclegan.py'),
                                      'upit.models.cyclegan.conv_norm_lr': ('models.cyclegan.html#conv_norm_lr', 'upit/models/cyclegan.py'),
                                      'upit.models.cyclegan.discriminator': ( 'models.cyclegan.html#discriminator',
                                                                              'upit/models/cyclegan.py'),
                                      'upit.models.cyclegan.pad_conv_norm_relu': ( 'models.cyclegan.html#pad_conv_norm_relu',
                                                                                   'upit/models/cyclegan.py'),
                                      'upit.models.cyclegan.resnet_generator': ( 'models.cyclegan.html#resnet_generator',
                                                                                 'upit/models/cyclegan.py')},
            'upit.models.dualgan': { 'upit.models.dualgan.DualGAN': ('models.dualgan.html#dualgan', 'upit/models/dualgan.py'),
                                     'upit.models.dualgan.DualGAN.__init__': ( 'models.dualgan.html#dualgan.__init__',
                                                                               'upit/models/dualgan.py'),
                                     'upit.models.dualgan.DualGAN.forward': ( 'models.dualgan.html#dualgan.forward',
                                                                              'upit/models/dualgan.py'),
                                     'upit.models.dualgan.DualGANGenerator': ( 'models.dualgan.html#dualgangenerator',
                                                                               'upit/models/dualgan.py'),
                                     'upit.models.dualgan.DualGANGenerator.__init__': ( 'models.dualgan.html#dualgangenerator.__init__',
                                                                                        'upit/models/dualgan.py'),
                                     'upit.models.dualgan.DualGANGenerator.forward': ( 'models.dualgan.html#dualgangenerator.forward',
                                                                                       'upit/models/dualgan.py'),
                                     'upit.models.dualgan.UNetDown': ('models.dualgan.html#unetdown', 'upit/models/dualgan.py'),
                                     'upit.models.dualgan.UNetDown.__init__': ( 'models.dualgan.html#unetdown.__init__',
                                                                                'upit/models/dualgan.py'),
                                     'upit.models.dualgan.UNetDown.forward': ( 'models.dualgan.html#unetdown.forward',
                                                                               'upit/models/dualgan.py'),
                                     'upit.models.dualgan.UNetUp': ('models.dualgan.html#unetup', 'upit/models/dualgan.py'),
                                     'upit.models.dualgan.UNetUp.__init__': ( 'models.dualgan.html#unetup.__init__',
                                                                              'upit/models/dualgan.py'),
                                     'upit.models.dualgan.UNetUp.forward': ('models.dualgan.html#unetup.forward', 'upit/models/dualgan.py'),
                                     'upit.models.dualgan.weights_init_normal': ( 'models.dualgan.html#weights_init_normal',
                                                                                  'upit/models/dualgan.py')},
            'upit.models.ganilla': { 'upit.models.ganilla.BasicBlock_Ganilla': ( 'models.ganilla.html#basicblock_ganilla',
                                                                                 'upit/models/ganilla.py'),
                                     'upit.models.ganilla.BasicBlock_Ganilla.__init__': ( 'models.ganilla.html#basicblock_ganilla.__init__',
                                                                                          'upit/models/ganilla.py'),
                                     'upit.models.ganilla.BasicBlock_Ganilla.forward': ( 'models.ganilla.html#basicblock_ganilla.forward',
                                                                                         'upit/models/ganilla.py'),
                                     'upit.models.ganilla.GANILLA': ('models.ganilla.html#ganilla', 'upit/models/ganilla.py'),
                                     'upit.models.ganilla.GANILLA.__init__': ( 'models.ganilla.html#ganilla.__init__',
                                                                               'upit/models/ganilla.py'),
                                     'upit.models.ganilla.GANILLA.forward': ( 'models.ganilla.html#ganilla.forward',
                                                                              'upit/models/ganilla.py'),
                                     'upit.models.ganilla.PyramidFeatures': ( 'models.ganilla.html#pyramidfeatures',
                                                                              'upit/models/ganilla.py'),
                                     'upit.models.ganilla.PyramidFeatures.__init__': ( 'models.ganilla.html#pyramidfeatures.__init__',
                                                                                       'upit/models/ganilla.py'),
                                     'upit.models.ganilla.PyramidFeatures.forward': ( 'models.ganilla.html#pyramidfeatures.forward',
                                                                                      'upit/models/ganilla.py'),
                                     'upit.models.ganilla.ResNet': ('models.ganilla.html#resnet', 'upit/models/ganilla.py'),
                                     'upit.models.ganilla.ResNet.__init__': ( 'models.ganilla.html#resnet.__init__',
                                                                              'upit/models/ganilla.py'),
                                     'upit.models.ganilla.ResNet._make_layer_ganilla': ( 'models.ganilla.html#resnet._make_layer_ganilla',
                                                                                         'upit/models/ganilla.py'),
                                     'upit.models.ganilla.ResNet.forward': ('models.ganilla.html#resnet.forward', 'upit/models/ganilla.py'),
                                     'upit.models.ganilla.ResNet.freeze_bn': ( 'models.ganilla.html#resnet.freeze_bn',
                                                                               'upit/models/ganilla.py'),
                                     'upit.models.ganilla.ganilla_generator': ( 'models.ganilla.html#ganilla_generator',
                                                                                'upit/models/ganilla.py'),
                                     'upit.models.ganilla.init_weights': ('models.ganilla.html#init_weights', 'upit/models/ganilla.py')},
            'upit.models.junyanz': { 'upit.models.junyanz.GANLoss': ('models.junyanz.html#ganloss', 'upit/models/junyanz.py'),
                                     'upit.models.junyanz.GANLoss.__call__': ( 'models.junyanz.html#ganloss.__call__',
                                                                               'upit/models/junyanz.py'),
                                     'upit.models.junyanz.GANLoss.__init__': ( 'models.junyanz.html#ganloss.__init__',
                                                                               'upit/models/junyanz.py'),
                                     'upit.models.junyanz.GANLoss.get_target_tensor': ( 'models.junyanz.html#ganloss.get_target_tensor',
                                                                                        'upit/models/junyanz.py'),
                                     'upit.models.junyanz.Identity': ('models.junyanz.html#identity', 'upit/models/junyanz.py'),
                                     'upit.models.junyanz.Identity.forward': ( 'models.junyanz.html#identity.forward',
                                                                               'upit/models/junyanz.py'),
                                     'upit.models.junyanz.NLayerDiscriminator': ( 'models.junyanz.html#nlayerdiscriminator',
                                                                                  'upit/models/junyanz.py'),
                                     'upit.models.junyanz.NLayerDiscriminator.__init__': ( 'models.junyanz.html#nlayerdiscriminator.__init__',
                                                                                           'upit/models/junyanz.py'),
                                     'upit.models.junyanz.NLayerDiscriminator.forward': ( 'models.junyanz.html#nlayerdiscriminator.forward',
                                                                                          'upit/models/junyanz.py'),
                                     'upit.models.junyanz.PixelDiscriminator': ( 'models.junyanz.html#pixeldiscriminator',
                                                                                 'upit/models/junyanz.py'),
                                     'upit.models.junyanz.PixelDiscriminator.__init__': ( 'models.junyanz.html#pixeldiscriminator.__init__',
                                                                                          'upit/models/junyanz.py'),
                                     'upit.models.junyanz.PixelDiscriminator.forward': ( 'models.junyanz.html#pixeldiscriminator.forward',
                                                                                         'upit/models/junyanz.py'),
                                     'upit.models.junyanz.ResnetBlock': ('models.junyanz.html#resnetblock', 'upit/models/junyanz.py'),
                                     'upit.models.junyanz.ResnetBlock.__init__': ( 'models.junyanz.html#resnetblock.__init__',
                                                                                   'upit/models/junyanz.py'),
                                     'upit.models.junyanz.ResnetBlock.build_conv_block': ( 'models.junyanz.html#resnetblock.build_conv_block',
                                                                                           'upit/models/junyanz.py'),
                                     'upit.models.junyanz.ResnetBlock.forward': ( 'models.junyanz.html#resnetblock.forward',
                                                                                  'upit/models/junyanz.py'),
                                     'upit.models.junyanz.ResnetGenerator': ( 'models.junyanz.html#resnetgenerator',
                                                                              'upit/models/junyanz.py'),
                                     'upit.models.junyanz.ResnetGenerator.__init__': ( 'models.junyanz.html#resnetgenerator.__init__',
                                                                                       'upit/models/junyanz.py'),
                                     'upit.models.junyanz.ResnetGenerator.forward': ( 'models.junyanz.html#resnetgenerator.forward',
                                                                                      'upit/models/junyanz.py'),
                                     'upit.models.junyanz.UnetGenerator': ('models.junyanz.html#unetgenerator', 'upit/models/junyanz.py'),
                                     'upit.models.junyanz.UnetGenerator.__init__': ( 'models.junyanz.html#unetgenerator.__init__',
                                                                                     'upit/models/junyanz.py'),
                                     'upit.models.junyanz.UnetGenerator.forward': ( 'models.junyanz.html#unetgenerator.forward',
                                                                                    'upit/models/junyanz.py'),
                                     'upit.models.junyanz.UnetSkipConnectionBlock': ( 'models.junyanz.html#unetskipconnectionblock',
                                                                                      'upit/models/junyanz.py'),
                                     'upit.models.junyanz.UnetSkipConnectionBlock.__init__': ( 'models.junyanz.html#unetskipconnectionblock.__init__',
                                                                                               'upit/models/junyanz.py'),
                                     'upit.models.junyanz.UnetSkipConnectionBlock.forward': ( 'models.junyanz.html#unetskipconnectionblock.forward',
                                                                                              'upit/models/junyanz.py'),
                                     'upit.models.junyanz.cal_gradient_penalty': ( 'models.junyanz.html#cal_gradient_penalty',
                                                                                   'upit/models/junyanz.py'),
                                     'upit.models.junyanz.define_D': ('models.junyanz.html#define_d', 'upit/models/junyanz.py'),
                                     'upit.models.junyanz.define_G': ('models.junyanz.html#define_g', 'upit/models/junyanz.py'),
                                     'upit.models.junyanz.get_norm_layer': ('models.junyanz.html#get_norm_layer', 'upit/models/junyanz.py'),
                                     'upit.models.junyanz.get_scheduler': ('models.junyanz.html#get_scheduler', 'upit/models/junyanz.py'),
                                     'upit.models.junyanz.init_net': ('models.junyanz.html#init_net', 'upit/models/junyanz.py'),
                                     'upit.models.junyanz.init_weights': ('models.junyanz.html#init_weights', 'upit/models/junyanz.py')},
            'upit.tracking.wandb': { 'upit.tracking.wandb.SaveModelAtEndCallback': ( 'tracking.wandb.html#savemodelatendcallback',
                                                                                     'upit/tracking/wandb.py'),
                                     'upit.tracking.wandb.SaveModelAtEndCallback.__init__': ( 'tracking.wandb.html#savemodelatendcallback.__init__',
                                                                                              'upit/tracking/wandb.py'),
                                     'upit.tracking.wandb.SaveModelAtEndCallback._save': ( 'tracking.wandb.html#savemodelatendcallback._save',
                                                                                           'upit/tracking/wandb.py'),
                                     'upit.tracking.wandb.SaveModelAtEndCallback.after_fit': ( 'tracking.wandb.html#savemodelatendcallback.after_fit',
                                                                                               'upit/tracking/wandb.py'),
                                     'upit.tracking.wandb.SaveModelAtEndCallback.name': ( 'tracking.wandb.html#savemodelatendcallback.name',
                                                                                          'upit/tracking/wandb.py'),
                                     'upit.tracking.wandb.UPITWandbCallback': ( 'tracking.wandb.html#upitwandbcallback',
                                                                                'upit/tracking/wandb.py'),
                                     'upit.tracking.wandb.UPITWandbCallback.__init__': ( 'tracking.wandb.html#upitwandbcallback.__init__',
                                                                                         'upit/tracking/wandb.py'),
                                     'upit.tracking.wandb.UPITWandbCallback.after_batch': ( 'tracking.wandb.html#upitwandbcallback.after_batch',
                                                                                            'upit/tracking/wandb.py'),
                                     'upit.tracking.wandb.UPITWandbCallback.after_epoch': ( 'tracking.wandb.html#upitwandbcallback.after_epoch',
                                                                                            'upit/tracking/wandb.py'),
                                     'upit.tracking.wandb.UPITWandbCallback.after_fit': ( 'tracking.wandb.html#upitwandbcallback.after_fit',
                                                                                          'upit/tracking/wandb.py'),
                                     'upit.tracking.wandb.UPITWandbCallback.before_fit': ( 'tracking.wandb.html#upitwandbcallback.before_fit',
                                                                                           'upit/tracking/wandb.py'),
                                     'upit.tracking.wandb.UPITWandbCallback.log_predictions': ( 'tracking.wandb.html#upitwandbcallback.log_predictions',
                                                                                                'upit/tracking/wandb.py'),
                                     'upit.tracking.wandb.log_dataset': ('tracking.wandb.html#log_dataset', 'upit/tracking/wandb.py')},
            'upit.train.cyclegan': { 'upit.train.cyclegan.CycleGANLoss': ('train.cyclegan.html#cycleganloss', 'upit/train/cyclegan.py'),
                                     'upit.train.cyclegan.CycleGANLoss.__init__': ( 'train.cyclegan.html#cycleganloss.__init__',
                                                                                    'upit/train/cyclegan.py'),
                                     'upit.train.cyclegan.CycleGANLoss._create_gan_loss': ( 'train.cyclegan.html#cycleganloss._create_gan_loss',
                                                                                            'upit/train/cyclegan.py'),
                                     'upit.train.cyclegan.CycleGANLoss.forward': ( 'train.cyclegan.html#cycleganloss.forward',
                                                                                   'upit/train/cyclegan.py'),
                                     'upit.train.cyclegan.CycleGANLoss.set_input': ( 'train.cyclegan.html#cycleganloss.set_input',
                                                                                     'upit/train/cyclegan.py'),
                                     'upit.train.cyclegan.CycleGANTrainer': ( 'train.cyclegan.html#cyclegantrainer',
                                                                              'upit/train/cyclegan.py'),
                                     'upit.train.cyclegan.CycleGANTrainer.__init__': ( 'train.cyclegan.html#cyclegantrainer.__init__',
                                                                                       'upit/train/cyclegan.py'),
                                     'upit.train.cyclegan.CycleGANTrainer._set_trainable': ( 'train.cyclegan.html#cyclegantrainer._set_trainable',
                                                                                             'upit/train/cyclegan.py'),
                                     'upit.train.cyclegan.CycleGANTrainer.after_batch': ( 'train.cyclegan.html#cyclegantrainer.after_batch',
                                                                                          'upit/train/cyclegan.py'),
                                     'upit.train.cyclegan.CycleGANTrainer.after_step': ( 'train.cyclegan.html#cyclegantrainer.after_step',
                                                                                         'upit/train/cyclegan.py'),
                                     'upit.train.cyclegan.CycleGANTrainer.before_batch': ( 'train.cyclegan.html#cyclegantrainer.before_batch',
                                                                                           'upit/train/cyclegan.py'),
                                     'upit.train.cyclegan.CycleGANTrainer.before_train': ( 'train.cyclegan.html#cyclegantrainer.before_train',
                                                                                           'upit/train/cyclegan.py'),
                                     'upit.train.cyclegan.CycleGANTrainer.before_validate': ( 'train.cyclegan.html#cyclegantrainer.before_validate',
                                                                                              'upit/train/cyclegan.py'),
                                     'upit.train.cyclegan.Learner.fit_flat_lin': ( 'train.cyclegan.html#learner.fit_flat_lin',
                                                                                   'upit/train/cyclegan.py'),
                                     'upit.train.cyclegan.ShowImgsCallback': ( 'train.cyclegan.html#showimgscallback',
                                                                               'upit/train/cyclegan.py'),
                                     'upit.train.cyclegan.ShowImgsCallback.__init__': ( 'train.cyclegan.html#showimgscallback.__init__',
                                                                                        'upit/train/cyclegan.py'),
                                     'upit.train.cyclegan.ShowImgsCallback.after_epoch': ( 'train.cyclegan.html#showimgscallback.after_epoch',
                                                                                           'upit/train/cyclegan.py'),
                                     'upit.train.cyclegan.ShowImgsCallback.before_fit': ( 'train.cyclegan.html#showimgscallback.before_fit',
                                                                                          'upit/train/cyclegan.py'),
                                     'upit.train.cyclegan.combined_flat_anneal': ( 'train.cyclegan.html#combined_flat_anneal',
                                                                                   'upit/train/cyclegan.py'),
                                     'upit.train.cyclegan.cycle_learner': ('train.cyclegan.html#cycle_learner', 'upit/train/cyclegan.py')},
            'upit.train.dualgan': { 'upit.train.dualgan.DualGANLoss': ('train.dualgan.html#dualganloss', 'upit/train/dualgan.py'),
                                    'upit.train.dualgan.DualGANLoss.__init__': ( 'train.dualgan.html#dualganloss.__init__',
                                                                                 'upit/train/dualgan.py'),
                                    'upit.train.dualgan.DualGANLoss.forward': ( 'train.dualgan.html#dualganloss.forward',
                                                                                'upit/train/dualgan.py'),
                                    'upit.train.dualgan.DualGANLoss.set_input': ( 'train.dualgan.html#dualganloss.set_input',
                                                                                  'upit/train/dualgan.py'),
                                    'upit.train.dualgan.DualGANTrainer': ('train.dualgan.html#dualgantrainer', 'upit/train/dualgan.py'),
                                    'upit.train.dualgan.DualGANTrainer.__init__': ( 'train.dualgan.html#dualgantrainer.__init__',
                                                                                    'upit/train/dualgan.py'),
                                    'upit.train.dualgan.DualGANTrainer._set_trainable': ( 'train.dualgan.html#dualgantrainer._set_trainable',
                                                                                          'upit/train/dualgan.py'),
                                    'upit.train.dualgan.DualGANTrainer.after_pred': ( 'train.dualgan.html#dualgantrainer.after_pred',
                                                                                      'upit/train/dualgan.py'),
                                    'upit.train.dualgan.DualGANTrainer.before_batch': ( 'train.dualgan.html#dualgantrainer.before_batch',
                                                                                        'upit/train/dualgan.py'),
                                    'upit.train.dualgan.DualGANTrainer.before_train': ( 'train.dualgan.html#dualgantrainer.before_train',
                                                                                        'upit/train/dualgan.py'),
                                    'upit.train.dualgan.compute_gradient_penalty': ( 'train.dualgan.html#compute_gradient_penalty',
                                                                                     'upit/train/dualgan.py'),
                                    'upit.train.dualgan.dual_learner': ('train.dualgan.html#dual_learner', 'upit/train/dualgan.py')}}}